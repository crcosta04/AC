P16 assembler v1.4.0 (Mar  6 2023)	lab01_sign.lst	Wed Mar 15 21:23:17 2023

Sections
Index   Name            Address   Size
0       .text           0000      004E 78

Symbols
Name                    Type      Value       Section
line#61                 LABEL     0046 70     .text
minusmone               LABEL     0012 18     .text
minusmtwo               LABEL     001C 28     .text
regular                 LABEL     002E 46     .text
signalcheck             LABEL     0006 6      .text
simetric                LABEL     0048 72     .text
trade                   LABEL     0024 36     .text
while                   LABEL     0036 54     .text
while_end               LABEL     0040 64     .text

Code listing
   1           	; -----------------------------------------------------------------------------
   2           	; Ficheiro:  lab01.S
   3           	; Descricao: Codigo de suporte a realizacao da 1a atividade laboratorial de AC.
   4           	; Autor:     Tiago M Dias (tiago.dias@isel.pt)
   5           	; Data:      11-03-2022
   6           	; -----------------------------------------------------------------------------
   7           	
   8           		; r0 guarda o valor da variavel M
   9           		; r1 guarda o valor da variavel m
  10           		; r2 guarda o valor da variavel p
  11           		; r3 e utilizado para guardar valores temporariamente
  12           	
  13 0000 03 60	mov r3, #0
  14 0002 03 24	push r3
  15 0004 03 24	push r3
  16           	signalcheck:; caso algum numero seja negativo vai trocar o sinal
  17 0006 03 60	    mov r3, #0
  18 0008 80 B9	    cmp r0, r3
  19 000A 03 54	    blt minusmone;  mone = M
  20 000C 90 B9	    cmp r1, r3
  21 000E 06 54	    blt minusmtwo;  mtwo = m
  22 0010 09 58	    b trade
  23           	
  24           	minusmone:
  25 0012 13 60	    mov r3, #1
  26 0014 10 B0	    mvn r0, r0
  27 0016 80 A0	    add r0, r0, #1
  28 0018 03 24	    push r3 ; quando e negativo da push do valor 1
  29 001A F5 5B	    b signalcheck
  30           	
  31           	minusmtwo:
  32 001C 13 60	    mov r3, #1
  33 001E 91 B0	    mvn r1, r1
  34 0020 91 A0	    add r1, r1, #1
  35 0022 03 24	    push r3 ; quando é negativo dá push do valor 1
  36           	
  37           	trade:
  38 0024 80 B8	    cmp r0, r1
  39 0026 03 4C	    bcc regular
  40 0028 80 D0	    eor r0, r0, r1
  41 002A 81 D0	    eor r1, r0, r1
  42 002C 80 D0	    eor r0, r0, r1
  43           	
  44           	regular:
  45 002E 03 60	    mov r3, #0
  46 0030 82 B1	    mov r2, r3
  47 0032 80 B9	    cmp r0, r3
  48 0034 05 40	    beq while_end
  49           	
  50           	while:
  51 0036 B0 B8	    cmp r3, r1
  52 0038 03 4C	    bhs while_end
  53 003A 22 80	    add r2, r2, r0
  54 003C 91 A8	    sub r1, r1, #1
  55 003E FB 5B	    b while
  56           	
  57           	while_end:
  58 0040 00 04	    pop r0
  59 0042 80 B9	    cmp r0, r3
  60 0044 01 44	    bne simetric
  61 0046 FF 5B	    b  .
  62           	
  63           	simetric:
  64 0048 12 B1	    mvn r2, r2
  65 004A A2 A0	    add r2, r2, #1
  66 004C F9 5B	    b while_end
