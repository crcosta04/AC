P16 assembler v1.4.0 (Mar  6 2023)	d:\ISEL\2223\LEIC\s2\AC\Trab1\char2nat.lst	Mon Mar 20 16:39:18 2023

Sections
Index   Name            Address   Size
0       .text           0000      003E 62

Symbols
Name                    Type      Value       Section
ACHAR                   ABSOLUTE  0041 65     .text
char2nat                LABEL     0000 0      .text
char2nat_end            LABEL     003A 58     .text
FCHAR                   ABSOLUTE  0046 70     .text
NAN                     ABSOLUTE  FFFF 65535  .text
NINECHAR                ABSOLUTE  0039 57     .text
number_nan              LABEL     002E 46     .text
radix_if1               LABEL     0028 40     .text
radix_if2               LABEL     0034 52     .text
SIXTEEN                 ABSOLUTE  0010 16     .text
symbol_else_if          LABEL     0016 22     .text
ZEROCHAR                ABSOLUTE  0030 48     .text

Code listing
   1           	;2 c)
   2           	
   3          	.equ NAN, 0xFFFF
   4          	.equ ZEROCHAR, '0'
   5          	.equ NINECHAR, '9'
   6          	.equ ACHAR, 'A'
   7          	.equ FCHAR, 'F'
   8          	.equ SIXTEEN, 16
   9           	
  10           	;r0 = symbol, r1 = radix, r2 = number
  11           	;r3 temporary values
  12           	
  13           	char2nat:
  14 0000 F2 6F	    mov r2, # NAN & 0xFF; number = NAN
  15 0002 F2 7F	    movt r2, # NAN & 0xFF
  16 0004 03 63	    mov r3, # ZEROCHAR
  17 0006 80 B9	    cmp r0, r3 
  18 0008 06 48	    blo symbol_else_if ; if(symbol < '0') -> symbol_else_if
  19 000A 93 63	    mov r3, # NINECHAR
  20 000C 30 B8	    cmp r3, r0
  21 000E 03 48	    blo symbol_else_if ; if(symbol > '9') -> symbol_else_if
  22 0010 03 63	    mov r3, # ZEROCHAR
  23 0012 82 89	    sub r2, r0, r3 ; number = symbol - '0'
  24 0014 09 58	    b radix_if1
  25           	
  26           	symbol_else_if:
  27 0016 13 64	    mov r3, # ACHAR
  28 0018 80 B9	    cmp r0, r3
  29 001A 06 48	    blo radix_if1    ; if(symbol < 'A') -> radix_if
  30 001C 63 64	    mov r3, # FCHAR
  31 001E 30 B8	    cmp r3, r0
  32 0020 03 48	    blo radix_if1    ; if( symbol > 'F') -> radix_if
  33 0022 13 64	    mov r3, # ACHAR
  34 0024 82 89	    sub r2, r0, r3 ; number = symbol - 'A'
  35 0026 22 A5	    add r2, r2, #10 ; number = number + 10
  36           	
  37           	radix_if1:
  38 0028 03 61	    mov r3, # SIXTEEN
  39 002A B0 B8	    cmp r3, r1
  40 002C 03 4C	    bhs radix_if2 ; if(radix <= 16) -> char2nat_end    
  41           	
  42           	number_nan:
  43 002E F2 6F	    mov r2, # NAN & 0xFF
  44 0030 F2 7F	    movt r2, # NAN & 0xFF
  45 0032 03 58	    b char2nat_end
  46           	
  47           	radix_if2:
  48 0034 A0 B8	    cmp r2, r1
  49 0036 01 48	    blo char2nat_end ; if(number < radix) -> char2nat_end
  50 0038 FA 5B	    b number_nan
  51           	
  52           	char2nat_end:
  53 003A 00 B1	    mov r0, r2
  54 003C 0F B7	    mov pc, lr
